<template>
	<view style="">
		<view style="height: 45upx;"></view>
		<image @click="closeSheet" :src="img('images/douyin/cuowu.png')" style="width: 28upx; height: 28upx; opacity: 0.6; position: absolute; right: 30upx; margin-top: 30upx;"></image>
		<text style="font-size: 12px; font-weight: bold; text-align: center; color: #FFFFFF;">{{pinlunNum}}条评论</text>
		
		<view :style="'width: '+ Width +'px; height: '+ (Height/num) +'px; margin-top: 20upx; background-color: #242424; display: flex; flex-direction: column;'">
			<text v-if="pinlunList.length == 0" :style="'font-size: 14px; font-weight: bold; color: #a3a1a4; margin-top: 150upx; margin-left: '+ (Width/2.9) +'px; position: absolute;'">～ 快来评论吧 ～</text>
			<list :show-scrollbar="false" :scrollable="true">
				<cell v-for="(list,index) in pinlunList" :key="index">
					<view :style="'width: '+ Width +'px; display: flex; flex-direction: row;'">
						<!-- 1.用户的头像 -->
						<image :src="list.avatar" mode="aspectFill" style="width: 75upx; height: 75upx; border-radius: 50upx; margin-top: 40upx; margin-left: 30upx;"></image>
						<!-- 2.一级评论 -->
						<view :style="'width: '+ (Width*0.8) +'px; display: flex;  flex-direction: column; margin-top: 40upx; margin-left: 20upx;'">
							<!-- 3.用户名称，并自动判断是否为视频作者 -->
							<view style="display: flex; flex-direction: row;">
								<text style="font-size: 12px; font-weight: bold; color: #a3a1a4;">{{list.nickname}}</text>
								<!-- 4.如果是视频作者就显示 作者 -->
								<view v-if="videouserID == list.userid" style="background-color: #E43D33; border-radius: 5upx; margin-left: 15upx;">
									<text style="font-size: 8px; font-weight: bold; padding: 5upx; padding-left: 8upx; padding-right: 8upx; font-weight: bold; color: #FFFFFF;">作者</text>
								</view>
							</view>
							<view v-if="list.pinlunContent.length !== 0" @click="huifu(index)" :style="'width: '+ (Width*0.78) +'px; display: flex; flex-direction: row; flex-wrap: wrap; margin-top: 14upx;padding-top:5px;'">
								<block v-for="(lili,inde) in list.pinlunContent[0].children" :key="inde">
									<text v-if="lili.name == 'text'" :style="'font-size: 15px; color: #FFFFFF; margin-left: -3upx;'">{{lili.text}}</text>
									<image v-if="lili.name == 'img'" :src="lili.attrs.src" style="width: 42upx; height: 42upx; margin-left: 2upx; margin-right: 2upx; margin-top: -4upx;"></image>
								</block>
							</view>
							<!-- 6.如果用户输入了 GIF 表情，就会在这里显示 -->
							<image v-if="list.imageURL !== ''" :src="list.imageURL" mode="aspectFill" style="width: 140upx; height: 140upx; margin-top: 20upx; border-radius: 10upx;"></image>
							<!-- 7.这里就是 时间、回复、点赞、点赞量显示的地方 -->
							<view :style="'width: '+ (Width*0.8) +'px; height: 40upx; display: flex; flex-direction: row; margin-top: 25upx;'">
								<text style="font-size: 12px; color: #a3a1a4;">{{list.time}}</text>
								<text @click="huifu(index)" style="font-size: 12px; font-weight: bold; color: #a3a1a4; margin-left: 20upx;">回复</text>
								<text v-if="userid == list.userid" @click="deletepinlun(index)" style="font-size: 12px; font-weight: bold; color: #a3a1a4; margin-left: 20upx;">删除</text>
								<image v-if="!list.mylike" @click="tolike(index)" :src="img('images/douyin/dianzan-7.png')" style="width: 35upx; height: 35upx; position: absolute; right: 45upx; margin-left: 5upx;"></image>
								<image v-if="list.mylike" @click="tolike(index)" :src="img('images/douyin/dianzan-6.png')" style="width: 35upx; height: 35upx; position: absolute; right: 45upx; margin-left: 5upx;"></image>
								<text @click="tolike(index)" style="font-size: 12px; color: #a3a1a4; position: absolute; right: 90upx; margin-top: 10upx;">{{list.like.length}}</text>
							</view>
							<!-- 8.用户回复的子评论会显示在这里 
							
							这里 update 用于刷新视图
							
							-->
							<block v-for="(li,inde) in list.sonPinlun" :key="inde">
								<view :style="'width: '+ (Width*0.8) +'px; display: flex; flex-direction: row;'">
									<!-- 9.子评论 用户头像 -->
									<image :src="li.avatar" mode="aspectFill" style="width: 45upx; height: 45upx; border-radius: 50upx; margin-top: 40upx;"></image>
									<!-- 10.动态计算宽度 子评论列表 -->
									<view :style="'width: '+ (Width*0.8*0.85) +'px; display: flex;  flex-direction: column; margin-top: 40upx; margin-left: 20upx;'">
										<view style="display: flex; flex-direction: row;">
											<view style="display: flex; flex-direction: row;">
												<!-- 11.回复评论的人显示在这里 -->
												<text style="font-size: 12px; font-weight: bold; color: #a3a1a4;">{{li.huifuUser}}</text>
												<!-- 12.同时要判断评论人是不是作者，如果是作者就在这里显示 -->
												<view v-if="videouserID == li.userid" style="background-color: #E43D33; border-radius: 5upx; margin-left: 15upx;">
													<text style="font-size: 8px; font-weight: bold; padding: 5upx; padding-left: 8upx; padding-right: 8upx; font-weight: bold; color: #FFFFFF;">作者</text>
												</view>
											</view>
											<!-- 13.图片是一个向右的小图标 -->
											
											<!-- 14.被回复用户的名称 会显示在这里 -->
											<view style="display: flex; flex-direction: row; margin-left: 10upx;">
												<text style="font-size: 12px; font-weight: bold; color: #a3a1a4;">{{li.nickname}}</text>
												<!-- 15.同时要判断评论人是不是作者，如果是作者就在这里显示 -->
												<view v-if="videouserID == li.gethuifuUserID" style="background-color: #E43D33; border-radius: 5upx; margin-left: 15upx;">
													<text style="font-size: 8px; font-weight: bold; padding: 5upx; padding-left: 8upx; padding-right: 8upx; font-weight: bold; color: #FFFFFF;">作者</text>
												</view>
											</view>
										</view>
										<!-- 16.
										
										由于 rich-text 有很多 bug 
										所以这里已经摒弃了，
										使用自研文本表情解析器 
										
										-->
										<view v-if="li.pinlunContent.length !== 0" :style="'width: '+ (Width*0.8*0.85) +'px; display: flex; flex-direction: row; flex-wrap: wrap; margin-top: 14upx;padding-top:5px;'">
											<block v-for="(lili,inde) in li.pinlunContent[0].children" :key="inde">
												<text v-if="lili.name == 'text'" :style="'font-size: 15px; bold; color: #FFFFFF; margin-left: -3upx;'">{{lili.text}}</text>
												<image v-if="lili.name == 'img'" :src="lili.attrs.src" style="width: 42upx; height: 42upx; margin-left: 2upx; margin-right: 2upx; margin-top: -2upx;"></image>
											</block>
										</view>
										<!-- 17.如果 子评论 用户输入了 GIF 表情，就会在这里显示 -->
										<image v-if="li.imageURL !== ''" :src="li.imageURL" mode="aspectFill" style="width: 140upx; height: 140upx; margin-top: 20upx; border-radius: 10upx;"></image>
										<!-- 18.这里就是 时间、回复、点赞、点赞量显示的地方 -->
										<view :style="'width: '+ (Width*0.8*0.85) +'px; height: 40upx; display: flex; flex-direction: row; margin-top: 25upx;'">
											<text style="font-size: 12px; color: #a3a1a4;">{{li.time}}</text>
											<text @click="deletesonpinlun(index,inde)" v-if="userid == li.userid" style="font-size: 12px; font-weight: bold; color: #a3a1a4; margin-left: 20upx;">删除</text>
											<image v-if="!li.mylike" @click="tosonlike(index,inde)" :src="img('images/douyin/dianzan-7.png')" style="width: 35upx; height: 35upx; position: absolute; right: 20upx; margin-left: 5upx;"></image>
											<image v-if="li.mylike" @click="tosonlike(index,inde)" :src="img('images/douyin/dianzan-6.png')" style="width: 35upx; height: 35upx; position: absolute; right: 20upx; margin-left: 5upx;"></image>
											<text @click="tosonlike(index,inde)" style="font-size: 12px; color: #a3a1a4; position: absolute; right: 62upx; margin-top: 10upx;">{{li.like.length}}</text>
										</view>
									</view>
								</view>
							</block>
							<!-- 19。显示 【展开xx条评论】、【收起评论】 -->
						</view>
					</view>
					<!-- 20.留一定的高度以免视图被遮挡 -->
					<view v-if="index == (pinlunList.length-1)" :style="'width: '+ Width +'px; height: 80px;'"></view>
				</cell>
			</list>
		</view>
		<!-- 21.底部，模拟假的输入框 -->
		<view v-if="show && ischangepinlun==false" @touchstart="openPinglun" :style="'width: '+ Width +'px; height: '+ plHeight +'px; background-color: #000000; position: fixed; bottom: 0;'">
			<view :style="'width: '+ (Width-30) +'px; height: 42px; margin-left: 15px; margin-top: 20upx; background-color: #181818; border-radius: 100upx; display: flex; flex-direction: row;'">
				<text v-if="platform=='ios'" style="font-size: 14px; color: #a3a1a4; margin-top: 20upx; margin-left: 30upx;">有爱评论，说点好听的～</text>
				<text v-if="platform!=='ios'" style="font-size: 14px; color: #a3a1a4; margin-top: 25upx; margin-left: 30upx;">有爱评论，说点好听的～</text>
				<!-- <image :src="img('images/douyin/atuser-2.png')" style="width: 70upx; margin-top: 15upx; height: 70upx; position: absolute; right: 110upx; margin-top: 10upx;"></image> -->
				<image :src="img('images/douyin/biaoqing.png')" style="width: 50upx; margin-top: 15upx; height: 50upx; position: absolute; right: 25upx;"></image>
			</view>
		</view>
		<view v-if="show && ischangepinlun==true" @touchstart="openPinglun" :style="'width: '+ Width +'px; height: '+ plHeight +'px; background-color: #000000;'">
			<view :style="'width: '+ (Width-30) +'px; height: 42px; margin-left: 15px; margin-top: 20upx; background-color: #181818; border-radius: 100upx; display: flex; flex-direction: row;'">
				<text v-if="platform=='ios'" style="font-size: 14px; color: #a3a1a4; margin-top: 20upx; margin-left: 30upx;">有爱评论，说点好听的～</text>
				<text v-if="platform!=='ios'" style="font-size: 14px; color: #a3a1a4; margin-top: 25upx; margin-left: 30upx;">有爱评论，说点好听的～</text>
				<image :src="img('images/douyin/biaoqing.png')" style="width: 50upx; margin-top: 15upx; height: 50upx; position: absolute; right: 25upx;"></image>
			</view>
		</view>
		<!-- 
		
		下面就是真正的评论框
		
		包含：
		1.输入框
		2.表情输入框
		3.GIF表情库
		4.最近使用表情和全部表情
		5.自己上传表情
		6. @ 自己的好友
		7.自带微博表情 和 QQ 表情
		8.能记忆输入
		
		 -->
		<uni-popup type="bottom" ref="openPinglun" @touchmove.stop.prevent="movehandle" @change="change">
			<view style="display: flex; flex-direction: column;">
				<view @click="openPinglun" :style="'width: '+ Width +'px; background-color: #FFFFFF; display: flex; flex-direction: row;'">
					<view :style="'width: '+ (Width-30)*percent +'px; margin-left: 15px; margin-top: 20upx; background-color: #f2f0f4; border-radius: '+ borderRadius +'upx; margin-bottom: 20upx; display: flex; flex-direction: row;'">
						<!-- 
						9.输入框 
						 -->
						<textarea 
						:style="'width: '+ (Width*0.6)*percent +'px; height: 20px; margin-bottom: 20upx; font-size: 15px; color: #000000; margin-top: 20upx; margin-left: 30upx;'" 
						:placeholder="placeholder"
						:cursor-spacing="cursorSpacing" 
						:auto-focus="autoFocus" 
						:auto-height="autoHeight" 
						:adjust-position="adjustPosition"
						v-model="value" 
						maxlength="150"
						@linechange="linechange"
						@keyboardheightchange="keyboardheightchange"
						@focus="focus"
						@click="clickTextarea"
						@blur="blur"
						></textarea>
						<!-- <image :src="img('images/douyin/atuser.png')" style="width: 70upx; height: 70upx; position: absolute; right: 110upx; margin-top: 8upx;"></image> -->
						<!-- 10.点击表情展开评论框 -->
						<image v-if="!isopen" @click="toemoji" :src="img('images/douyin/biaoqing-2.png')" style="width: 50upx; margin-top: 15upx; height: 50upx; position: absolute; right: 25upx;"></image>
						<image v-if="isopen" @click="toemoji" :src="img('images/douyin/jianpan.png')" style="width: 50upx; margin-top: 15upx; height: 50upx; position: absolute; right: 25upx;"></image>
					</view>
					<!-- 11.发送按钮
					 
					 符合：有内容、或者是输入 GIF 图片都可以通过
					 
					 -->
					<view v-if="(value!=='' || imageURL !== '') && isSend" @click="sendSMS" style="width: 30px; height: 30px; border-radius: 40px; background-color: #ff1a63; margin-top: 30upx; margin-left: 20upx;">
						<image :src="img('images/douyin/shangyi.png')" style="width: 30upx; height: 30upx; margin-top: 16upx; margin-left: 16upx;"></image>
					</view>
				</view>
			</view>
			<!-- 12.用于显示用户选择的 GIF 图片 -->
			<view v-if="isShowImage" :style="'width: '+ Width +'px; height: 75px; background-color: #FFFFFF;'">
				<view style="display: flex; flex-direction: row;">
					<image :src="imageURL" mode="aspectFill" style="width: 120upx; height: 120upx; margin-top: 10upx; margin-left: 50upx;"></image>
					<image @click="deleteimageURL" :src="img('images/douyin/zfxsc.png')" style="width: 30upx; height: 30upx; position: absolute; margin-left: 140upx; margin-top: 12upx;"></image>
				</view>
			</view>
			<!-- 13.
			
			表情 区
			
			-->
			<view :style="'width: '+ Width +'px; height: '+ emojiHeight +'px; background-color: #FFFFFF;'">
				<!-- 
				isToShow：这个参数用于控制显示，不动它即可 
				 -->
				<block v-if="isToShow">
					<!-- 14.表情选择栏：
					 
					 最近输入的 GIF 图在：timeEmoji
					 默认展示的 表情 ：nowEmoji
					 自己上传的图片：likeEmoji
					 GIF 图片库：gifEmoji
					 
					 -->
					<scroll-view 
					:style="'width: '+ Width +'px; height: 40px; background-color: #FFFFFF;'" 
					:scroll-x="true" style="display: flex; flex-direction: row;" :show-scrollbar="false">
						<view :style="'display: flex; flex-direction: row; width: '+ Width +'px; padding-top: 10upx; padding-bottom: 10upx; border-bottom: 1upx solid #f3f1f4;'">
							<view :style="'width: 90upx; height: 60upx; border-radius: 60upx; position: absolute; background-color: #f8f4f7; margin-top: -8upx; margin-left: '+ (Width*0.04)*currentNum +'px;'"></view>
							<image @click="timeEmoji(0)" :src="img('images/douyin/time.png')" style="width: 45upx; height: 45upx; margin-left: 50upx;"></image>
							<!-- <image @click="nowEmoji" :src="img('images/douyin/biaoqing-1.png')" style="width: 50upx; height: 50upx; margin-left: 50upx; margin-top: -5upx;"></image> -->
							<!-- <image @click="likeEmoji" :src="img('images/douyin/xianxing.png')" style="width: 55upx; height: 55upx; margin-left: 50upx; margin-top: -5upx;"></image> -->
							<view @click="gifEmoji(1)" style="width: 45upx; height: 45upx; border-radius: 55upx; border: 2px solid #303133; margin-left: 52upx; margin-top: 0upx;">
								<image :src="img('images/douyin/gif-2.png')" style="width: 35upx; height: 35upx;"></image>
							</view>
						</view>
					</scroll-view>
					<!-- 15.表情选择栏：
					 
					 最近输入的 GIF 图在：timeEmoji
					 默认展示的 表情 ：nowEmoji
					 自己上传的图片：likeEmoji
					 GIF 图片库：gifEmoji
					 
					 -->
					<swiper :style="'width: '+ Width +'px; height: '+ (emojiHeight-40) +'px; background-color: #FFFFFF;'" :current="current" @change="currentChange">
						<swiper-item>
							<scroll-view :style="'width: '+ Width +'px; height: '+ (emojiHeight-40) +'px; background-color: #FFFFFF;'" :scroll-y="true">
								<text v-if="nowImage.length !== 0" @click="qingkonGIF" style="font-size: 12px; margin-top: 20upx; position: absolute; right: 40upx; color: #007AFF;">清空</text>
								<view style="display: flex; flex-direction: row; flex-wrap: wrap; margin-top: 40upx;">
									<block v-for="(list,index) in nowImage" :key="index">
										<image @click="clicknowImage(index)" :src="list" mode="aspectFill" style="width: 120upx; height: 120upx; margin-top: 40upx; margin-left: 55upx;"></image>
									</block>
									<block v-if="nowImage.length == 0">
										<text :style="'font-size: 14px; color: #999999; margin-top: 200upx; margin-left: '+ (Width/3.2) +'px;'">～ 您还没使用过图片 ～</text>
									</block>
								</view>
								<view :style="'width: '+ Width +'px; height: 80px;'"></view>
							</scroll-view>
						</swiper-item>
						
						
						<swiper-item>
							<scroll-view :style="'width: '+ Width +'px; height: '+ (emojiHeight-40) +'px; background-color: #FFFFFF;'" :scroll-y="true" @scrolltolower="scrolltolowerGIF">
								<view style="display: flex; flex-direction: row; flex-wrap: wrap;">
									<block v-for="(list,index) in gifAndpnglist" :key="index">
										<image @click="clickGIF(index)" :src="list.url" mode="aspectFill" style="width: 120upx; height: 120upx; margin-top: 40upx; margin-left: 55upx;"></image>
									</block>
								</view>
								<view :style="'width: '+ Width +'px; height: 80px;'"></view>
							</scroll-view>
						</swiper-item>
					</swiper>
				</block>
				<block v-if="!isToShow">
					<!-- 这里为空即可，不加任何东西 -->
				</block>
			</view>
		</uni-popup>
		
	</view>
</template>

<script>
	//判断环境
	let env = 'wx_app';
	// #ifdef APP-PLUS
	env = 'plus_app';
	// #endif
	// #ifdef H5
	env = 'h5';
	// #endif
	let token = uni.getStorageSync('token');
	import Config from '@/common/js/config.js'
	let requestUrl = Config.baseUrl+'/addons/public_serve/public/index.php/';
	// 1.先引入表情库，（完全手撸，十分繁琐）（这个是 QQ 的表情库）
	//import emojiList from '@/common/emoji/biaoqin.js'
	// 2.这个表情库是新浪微博 的表情库
	//import sinaEmojiList from '@/common/emoji/sina.js'
	// 3.这个一定要引入进来，用来解析生成的 <html>【??????????】十分重要【这里已经对原来的文件进行了改编】
	import parsehtml from '@/common/html-parse/parse_html.js'
	// 4.这里引入时间函数 用来上传时用的
	import time from '@/common/time-utils/currentData.js'
	export default {
		name:"douyin-scrollview",
		props: {
			Width: Number,
			Height : Number,
			deleteIOSHeight: Number,
			deleteAndroidHeight: Number
		},
		data() {
			return {
				// 每一个参数都重要
				// 解释如下：
				// ----- start ----- 评论输入框部分
				num: 1.15,//用来处理评论的高度
				plHeight: 0,//评论高度
				value: "",//用户在输入框输入信息的数据
				autoHeight: false,//这个默认即可（用于评论框自动适应高度）
				borderRadius: 100,//评论框圆角大小
				lineheight: 0,//默认即可（用于处理评论框高度）
				percent: 1,//默认（用于处理发送按钮已经评论框宽度）
				show: true,//默认（是否显示评论框）
				emojiHeight: 0,//表情区域的高度
				emojiheight: 0,//用于处理表情区域的高度
				cursorSpacing: 20,//键盘距离输入框的距离
				autoFocus: true,//是否自动聚焦（默认聚焦）
				isopen: false,//(默认不展开)
				isToShow: false,//默认
				adjustPosition: false,//默认
				placeholder: "有爱评论，说点好听的～",
				
				// 
				current: 1,//当前切换的位置
				emojilist: [],//表情数组
				nowTimeEmojiList: [],//最近输入的表情
				sinaEmojilist: [],//新浪微博表情
				currentNum: 4.4,//默认
				likeImage: [],//默认
				nowImage: [],//默认
				
				gifAndpngList: [],//默认
				gifAndpnglist: [],//默认
				
				searchGIFValue: "",//默认
				isSearcopen: false,//默认
				GifList: [],//默认
				isShowImage: false,//默认
				imageURL: "",//默认
				
				platform: "",//默认
				systemVerson: "",//系统版本
				ischangepinlun: true,//默认显示全面屏手机评论样式
				
				// ----- end ----- 评论输入框部分
				
				// ----- start ----- 评论内容部分
				pinlunList: [],//用于在界面展示的 评论数组
				pinlunListX: [],//这个是用来存储原始评论数据的数组
				pinlun_list: [],//用于存储界面 评论数组 的副本
				pinlunNum: 0,//总评论数量
				video_id: "",//当前视频的 ID
				isSend: true,//默认
				userid: "",//当前用户的 ID
				videouserID: "",//当前视频作者的 ID
				update: true,//用于刷新视图
				
				huifuUser: "",//回复信息的人的名字
				gethuifuUser: "",//被回复的人（也就是接收者的名字）
				gethuifuUserID: "",//被回复的人的 ID
				istohuifu: false,//是否是去回复（默认不是）
				huifuindex: 0,//回复信息所在下标
				iszhangkai: false,//默认不展开评论
				fid: 0, //回复信息的上级ID
				// ----- end ----- 评论内容部分
			};
		},
		watch:{
			// 监听 输入表情值 并搜索 GIF 表情
			searchGIFValue(val){
				this.isopen = false;
				if(val !== ''){
					var sms = []
					for(let i=0;i<this.gifAndpngList.length;i++){
						if(this.gifAndpngList[i].name.indexOf(val) !== -1){
							sms.push(this.gifAndpngList[i]);
						}
					}
					this.GifList = sms;
				}
			},
			// 监听 输入框输入数据
			value(val){
				if(val == ""){
					this.autoHeight = false
					if(this.imageURL !== ''){
						this.percent = 0.9
					} else {
						this.percent = 1
					}
				} else {
					this.autoHeight = true
					this.percent = 0.9
				}
			},
			// 监听 GIF图片（用户选择一个 GIF 图片以后这个值就会被赋值）
			imageURL(val){
				if(val !== ''){
					this.percent = 0.9
				} else {
					if(this.value == ''){
						this.percent = 1
					}
				}
			},
			// 监听 输入框 高度变化
			lineheight(newVal,oldVal){
				if(Math.abs(newVal) < 30){
					this.borderRadius = 100
				} else {
					this.borderRadius = 30
				}
			}
		},
		/*
		打开组件之后开始执行下面方法
		*/ 
		created(){
			// 1.isToShow 用于输入框显示（默认不改）
			this.isToShow = false;
			// 2.判断当前设备信息
			var model = uni.getDeviceInfo().model;
			// 3.判断当前设备信息
			this.platform = uni.getDeviceInfo().platform;
			// 3.1 获取系统版本
			var systemVerson = uni.getDeviceInfo().system
			if(systemVerson.split(' ')[0] == "Android"){
				if(systemVerson.split(' ')[1] < 9){
					// 低端安卓机
					this.ischangepinlun = false//小于安卓 8
					this.windowHeight = uni.getDeviceInfo().screenHeight;
					this.emojiHeight = this.windowHeight/2.1 - this.deleteAndroidHeight;
				} else {
					// 全面屏安卓机
					this.ischangepinlun = true//全面屏
					this.windowHeight = uni.getDeviceInfo().screenHeight;
					this.emojiHeight = this.windowHeight/2.6 - this.deleteAndroidHeight;
				}
			} else {
				if(uni.getDeviceInfo().platform == 'ios' && (model !== 'iPhone6' || model !== 'iPhone6s' || model !== 'iPhone7' || model !== 'iPhone8')){
					// 全面屏iPhone
					this.ischangepinlun = true//全面屏
					this.windowHeight = uni.getDeviceInfo().screenHeight;
					this.emojiHeight = this.windowHeight/2.2 - this.deleteIOSHeight;
				} else {
					// 非全面屏iPhone
					this.ischangepinlun = false
					this.windowHeight = uni.getDeviceInfo().screenHeight;
					this.emojiHeight = this.windowHeight/2.1 - this.deleteIOSHeight;
				}
			}
			// 4.获取当前 视频 ID
			this.video_id = uni.getStorageSync("video_id");
			// 5.获取当前 用户 ID
			console.log('缓存的用户信息------------', uni.getStorageSync("userInfo"))
			this.userid = uni.getStorageSync("userInfo").userid;
			// 6.获取评论信息
			this.getnewpinlun();
			// 7.根据设备信息，处理评论区域高度
			if(uni.getDeviceInfo().platform == 'ios' && (model !== 'iPhone6' || model !== 'iPhone6s' || model !== 'iPhone7' || model !== 'iPhone8')){
				this.num = 1.25
			} else {
				this.num = 1.15
			}
			if(uni.getDeviceInfo().platform=='ios'){
				this.adjustPosition = true
			} else {
				this.adjustPosition = false
			}
			this.plHeight = this.Height-(this.Height/this.num);
			console.log(this.plHeight);
			// 8.聚焦输入
			this.focus();
			// 9.判断是否有 GIF 图片
			if(this.imageURL !== ''){
				this.percent = 0.9
			}
			// 10.把之前准备好的 emoji 表情赋值给 数组，用于展示
			//this.emojilist = []
			this.sinaEmojilist = sinaEmojiList
			// 11.看看有没有喜欢的 GIF，有的话赋值
			this.likeImage = uni.getStorageSync("likeImage");
			// 11.看看有没有当前的 GIF，有的话赋值
			this.nowImage = uni.getStorageSync("nowImage");
			// 11.看看有没有当前的 emoji ，有的话赋值
			this.nowTimeEmojiList = uni.getStorageSync("nowTimeEmojiList");
			// 12.请求 GIF 表情库（这里的表情库都存在 json 文件里面了）
		   let _that = this;
		   let post_data = {
				env: env,
				uniacid: Config.uniacid,
		   };
		   uni.request({
				url: requestUrl + 'app/Common/getGifList',
				data: post_data,
				method: "POST",
				header: {
					'content-type': 'application/json',
					'Authorization': token ? token : ''
				},
				success:(res)=>{
					if(res.data.data.list.length){
						this.gifAndpngList = res.data.data.list;
					}
				}
		   });
		},
		methods:{
			img(img_path) {
				var path = "";
				var baseUrl = Config.baseUrl;
				path = baseUrl + "/addons/public_serve/public/" + img_path;
				return path;
			},
			/*
			
			---- 第一段，这里面含有 http 后台真实请求，以及返回处理的操作以及数据
			
			【????????????????????????????????????????????????????】
			
			---- start ----
			
			*/ 
			getnewpinlun(){
				// 这里是对评论信息做处理
				let _that = this;
				let post_data = {
					env: env,
					uniacid: Config.uniacid,
					video_id: uni.getStorageSync("video_id")
				};
				uni.request({
					url: requestUrl + 'app/MemberVideo/getMemberVideoPlugin',
					data: post_data,
					method: "POST",
					header: {
						'content-type': 'application/json',
						'Authorization': token ? token : ''
					},
					success:(res)=>{
						this.pinlunList = [];
						this.pinlunListX = [];
						if(res.data.data.list.length){
							var pins = res.data.data.list;
							this.pinlunNum = pins.length;
							var pin = res.data.data.list;
							this.videouserID = res.data.data.videouserID ? res.data.data.videouserID : 0;
							for(let i=0; i<pin.length; i++){
								this.pinlunList.unshift(pin[i]);
								this.pinlun_list.unshift(pins[i]);
							}
							this.pinlunListX = res.data.data.list;
						}
					}
				});
			},
			sendSMS(){
				if(this.userid !== ''){
					// 1.先处理表情信息
					var str = this.value;
					var stri = ""
					var nodes = '';
					if(this.value !== ''){
						let replacedStr = str.replace(/\[([^(\]|\[)]*)\]/g,(item, index)=>{
							for(let i=0;i<this.emojilist.length;i++){
								let row = this.emojilist[i];
								if(row.alt==item){
									return imgstr;
								}
							}
						});
						stri = '<div>'+replacedStr+'</div>';
						nodes = parsehtml(stri);
					} else {
						nodes = [];
					}
					let _that = this;
					let post_data = {
						env: env,
						uniacid: Config.uniacid,
						video_id: uni.getStorageSync("video_id"),
						pinlunContent: nodes,
						time: time.getDate(),
						sonPinlun: [],
						like: [],
						imageURL: this.imageURL,
						fid: this.fid,
					};
					uni.request({
						url: requestUrl + 'app/MemberVideo/publishVideoPlugin',
						data: post_data,
						method: "POST",
						header: {
							'content-type': 'application/json',
							'Authorization': token ? token : ''
						},
						success:(res)=>{
							uni.hideLoading();
							this.value = "";
							this.imageURL = "";
							this.$refs.openPinglun.close();
							this.isSend = true;
							this.getnewpinlun();
						}
					});
				} else {
					uni.showModal({
						title: '警告提示',
						content: '请先登录'
					})
				}
			},
			tolike(index){
				// 处理评论
				let post_data = {
					env:env,
					video_id: uni.getStorageSync("video_id"),
					id: this.pinlunList[index].id
				};
				if(this.pinlunList[index].mylike == false){
					this.pinlunListX[(this.pinlunListX.length-1)-index].like.push(uni.getStorageSync("userInfo").userid);
				} else {
					var sms = []
					for(let i=0;i<this.pinlunListX[(this.pinlunListX.length-1)-index].like.length;i++){
						if(this.pinlunListX[(this.pinlunListX.length-1)-index].like[i] !== uni.getStorageSync("userInfo").userid){
							sms.push(this.pinlunListX[(this.pinlunListX.length-1)-index].like[i]);
						}
					}
					this.pinlunListX[(this.pinlunListX.length-1)-index].like = sms;
				}
				uni.request({
					url: requestUrl + 'app/MemberVideo/memberVideoPluginLike',
					data: post_data,
					method: "POST",
					header: {
						'content-type': 'application/json',
						'Authorization': token ? token : ''
					},
					success:(res)=>{
						this.getnewpinlun();
					}
				});
			},
			tosonlike(index,inde){
				// 处理子评论
				let post_data = {
					env:env,
					video_id: uni.getStorageSync("video_id"),
					id: this.pinlunList[index].sonPinlun[inde].id
				};
				if(this.pinlunList[index].sonPinlun[inde].mylike == false){
					this.pinlunList[index].sonPinlun[inde].like.push(uni.getStorageSync("userInfo").userid)
				} else {
					let find = this.pinlunList[index].sonPinlun[inde].like.indexOf(uni.getStorageSync("userInfo").userid);
					if(find > -1){
						let new_like = [];
						for(var i = 0; i < this.pinlunList[index].sonPinlun[inde].like.length; i++){
							if(this.pinlunList[index].sonPinlun[inde].like[i] != uni.getStorageSync("userInfo").userid){
								new_like.push(this.pinlunList[index].sonPinlun[inde].like[i]);
							}
						}
						this.pinlunList[index].sonPinlun[inde].like = new_like;
					}
				}
				uni.request({
					url: requestUrl + 'app/MemberVideo/memberVideoPluginLike',
					data: post_data,
					method: "POST",
					header: {
						'content-type': 'application/json',
						'Authorization': token ? token : ''
					},
					success:(res)=>{
						this.getnewpinlun();
					}
				});
			},
			
			deletesonpinlun(index,inde){
				// 删除 子评论（由于评论是按照时间顺序展示的，所以这里的赋值都是取反的）
				uni.showModal({
					title: '提示',
					content: '确定删除该评论吗？',
					success: (re) => {
						if(re.confirm){
							uni.showLoading({
								title: "正在删除"
							})
							let post_data = {
								env:env,
								id: this.pinlunList[index].sonPinlun[inde].id
							};
							let List = this.pinlunList[index].sonPinlun;
							let msm = []
							for(let j=0;j<List.length;j++){
								if(j !== inde){
									msm.unshift(List[j]);
								}
							}
							this.pinlunListX[(this.pinlunListX.length-1)-index].sonPinlun = msm;
							var pin = this.pinlunListX;
							
							uni.request({
								url: requestUrl + 'app/MemberVideo/delMemberVideoPlugin',
								data: post_data,
								method: "POST",
								header: {
									'content-type': 'application/json',
									'Authorization': token ? token : ''
								},
								success:(res)=>{
									uni.hideLoading();
									this.getnewpinlun();
								}
							});
						}
					}
				})
			},
			deletepinlun(index){
				// 删除 评论（子评论也将被删除）
				let post_data = {
					env:env,
					id: this.pinlunList[index].id
				};
				uni.showModal({
					title: '提示',
					content: '确定删除该评论吗？',
					success: (re) => {
						if(re.confirm){
							uni.showLoading({
								title: "正在删除"
							})
							var sms = []
							for(let i=0;i<this.pinlunListX.length;i++){
								if(i !== ((this.pinlunListX.length-1)-index)){
									sms.push(this.pinlunListX[i]);
								}
							}
							uni.request({
								url: requestUrl + 'app/MemberVideo/delMemberVideoPlugin',
								data: post_data,
								method: "POST",
								header: {
									'content-type': 'application/json',
									'Authorization': token ? token : ''
								},
								success:(res)=>{
									uni.hideLoading();
									this.getnewpinlun();
								}
							});
						}
					}
				})
			},
			
			huifu(index){
				// 1.评论回复
				this.huifuUser = uni.getStorageSync("userInfo").nickname;
				this.gethuifuUser = this.pinlunList[index].nickname;
				this.gethuifuUserID = this.pinlunList[index].userid;
				this.istohuifu = true;
				this.placeholder = "回复：" + this.pinlunList[index].nickname;
				this.huifuindex = index;
				this.fid = this.pinlunList[index].id;
				this.openPinglun();
			},
			clicknowImage(index){
				// 点击 GIF 图片信息
				this.imageURL = this.nowImage[index];
				this.isShowImage = true;
			},
			
			deleteimageURL(){
				// 清理 GIF 图片
				this.imageURL = "";
				this.isShowImage = false;
			},
			clickGIF(index){
				// 在选择 GIF 列表，点击 GIF 图片，选择图片
				/*
				（1）获取 GIF 链接
				（2）清理搜索的 GIF 输入框信息
				（3）缓存 GIF 图片信息
				*/ 
				this.imageURL = this.gifAndpnglist[index].url;
				this.isShowImage = true;
				if(uni.getStorageSync("nowImage").length == 0){
					this.nowImage = []
					this.nowImage.push(this.imageURL)
					uni.setStorageSync("nowImage",this.nowImage);
				} else {
					this.nowImage = uni.getStorageSync("nowImage");
					let isTrue = true;
					for(let i=0;i<this.nowImage.length;i++){
						if(this.imageURL == this.nowImage[i]){
							isTrue = false;
						}
					}
					if(isTrue){
						this.nowImage.push(this.imageURL)
					}
					uni.setStorageSync("nowImage",this.nowImage);
				}
			},
			
			qingkonGIF(){
				// 清空当前 GIF 图片
				uni.showModal({
					title: '确定清空？',
					success: (re) => {
						if(re.confirm){
							this.nowImage = []
							uni.removeStorageSync("nowImage");
						}
					}
				})
			},
			searchGIFChange(e){
				
			},
			change(e){
				// 输入框开关变化
				/*
				（1）如果打开输入框（show == true）
					- 此时请求 GIF 列表图片信息
				（2）如果关闭输入框
					- 恢复默认设置
				*/ 
				this.isToShow = false;
				if(e.show == true){
					this.show = false;
					this.getGif();
				} else {
					uni.hideKeyboard();
					this.show = true
					this.autoFocus = true;
					this.isopen = false;
					this.current = 1;
					this.currentNum = 4.4;
					this.isShowImage = false;
					this.cursorSpacing = 20;
					this.placeholder = "有爱评论，说点好听的～";
					this.istohuifu = false;
				}
			},
			/*
			
			以下方法都是输入框 状态变化，以及逻辑切换等信息
			
			虽然不起眼但是很重要 【??????????】
			
			（如果是要复制的话都是要复制的）
			
			*/ 
			// ------- start -------
			clickTextarea(){
				this.isopen = false;
				if(uni.getDeviceInfo().platform == 'ios'){
					this.autoFocus = false;
					setTimeout(()=>{
						this.autoFocus = true;
					},200)
				}
			},
			closeSheet(){
				this.$emit('closeScrollview');
			},
			movehandle(){},
			movesearch(){},
			openPinglun(){
				this.$refs.openPinglun.open('bottom')
			},
			linechange(event){
				this.lineheight = event.detail.height
			},
			keyboardheightchange(){},
			blur(){
				uni.hideKeyboard();
			},
			focus(){
				if(uni.getDeviceInfo().platform == 'ios'){
					this.autoFocus = false;
					this.isopen = true;
				}
				setTimeout(()=>{
					this.autoFocus = true;
					this.isopen = false;
					setTimeout(()=>{
						if(uni.getDeviceInfo().platform == 'ios'){
							this.isToShow = true;
						}
						if(this.imageURL !== ''){
							this.isShowImage = true;
						}
					},1500)
				},20)
			},
			toemoji(){
				if(this.isopen==false){
					this.isopen = true;
					setTimeout(()=>{
						this.isToShow = true;
					},500)
					uni.hideKeyboard();
				} else {
					if(uni.getDeviceInfo().platform == 'ios'){
						this.isShowImage = false;
					} else {
						this.isToShow = false;
					}
					this.isopen = false;
					this.autoFocus = false;
					setTimeout(()=>{
						this.autoFocus = true;
						if(this.imageURL !== ''){
							setTimeout(()=>{
								this.isShowImage = true;
							},1300)
						}
					},20)
				}
			},
			undo(){
				if(this.value !== ""){
					var str = ""
					for(let i=0;i<this.value.length-1;i++){
						str += this.value[i]
					}
					this.value = str;
				}
			},
			timeEmoji(e){
				this.currentNum = 1
				this.current = e
			},
			nowEmoji(e){
				this.currentNum = 4.3
				this.current = e
			},
			likeEmoji(e){
				this.currentNum = 7.6
				this.current = e
			},
			gifEmoji(e){
				this.currentNum = 11.0
				//this.current = 3
				this.current = e
			},
			qingkon(){
				uni.showModal({
					title: '确定清空？',
					success: (re) => {
						if(re.confirm){
							this.nowTimeEmojiList = []
							uni.removeStorageSync("nowTimeEmojiList");
						}
					}
				})
			},
			clicknowTimeEmoji(index){
				var str = this.nowTimeEmojiList[index].alt;
				this.value += str;
			},
			clickEmoji(index){
				// console.log(this.emojilist[index])
				var str = this.emojilist[index].alt;
				this.value += str;
				if(uni.getStorageSync("nowTimeEmojiList").length == 0){
					this.nowTimeEmojiList = []
					this.nowTimeEmojiList.push(this.emojilist[index])
					uni.setStorageSync("nowTimeEmojiList",this.nowTimeEmojiList);
				} else {
					this.nowTimeEmojiList = uni.getStorageSync("nowTimeEmojiList");
					let isTrue = true;
					for(let i=0;i<this.nowTimeEmojiList.length;i++){
						if(this.emojilist[index].alt == this.nowTimeEmojiList[i].alt){
							isTrue = false;
						}
					}
					if(isTrue){
						this.nowTimeEmojiList.push(this.emojilist[index])
					}
					uni.setStorageSync("nowTimeEmojiList",this.nowTimeEmojiList);
				}
			},
			clicksinaEmoji(index){
				console.log(this.sinaEmojilist[index])
			},
			currentChange(e){
				var num = e.detail.current + 1
				switch (num){
					case 1:
					this.currentNum = 1
						break;
					case 2:
					this.currentNum = 4.3
						break;
					case 3:
					this.currentNum = 7.6
						break;
					case 4:
					this.currentNum = 11.0
						break;
					default:
						break;
				}
			},
			getGif(){
				var list = []
				for(let i=0;i<15;i++){
					var num = Math.round(Math.random()*this.gifAndpngList.length);
					list.push(this.gifAndpngList[num]);
				}
				this.gifAndpnglist = list
			},
			scrolltolowerGIF(){
				for(let i=0;i<15;i++){
					var num = Math.round(Math.random()*this.gifAndpngList.length);
					this.gifAndpnglist.push(this.gifAndpngList[num]);
				}
			}
			// ------- end -------
		}
	}
</script>

<style>
	
</style>
